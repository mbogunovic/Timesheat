@model TimeshEAT.Web.Models.Render.Company.CompanyDetailsRenderModel

@if (Model.HasValue())
{
    <div class="accordion__item">
        <div class="accordion" data-accordion><span>@(Model.Name.HasValue() ? Model.Name : Model.DisplayName(x => x.Name))</span></div>
        @using (Ajax.BeginForm("Save", "Company", null,
            new AjaxOptions
            {
                HttpMethod = "POST",
                OnSuccess = "location.reload();",
                OnFailure = "showValidationMessages"
            },
            new { @class = "accordion__content row", style = "display:none;" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.Version)
            <div class="col-4">
                <div class="field">
                    @Html.LabelFor(m => m.Name)
                    <div class="validation__wrapper">
                        @Html.TextBoxFor(m => m.Name, new { placeholder = Model.DisplayName(m => m.Name) })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.DailyDiscount)
                    <div class="validation__wrapper">
                        @Html.TextBoxFor(m => m.DailyDiscount, new { placeholder = Model.DisplayName(m => m.DailyDiscount), type = "number", min = 0 })
                        @Html.ValidationMessageFor(m => m.DailyDiscount)
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="field">
                    @Html.LabelFor(m => m.MealList)
                    @Html.DropDownListFor(m => m.MealList, Model.MealList, "Dodaj jelo", new { data_company_meals_list = "" })
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.SelectedMeals)
                    <ul data-company-meals class="portions__prices">
                        @if (Model.Meals.HasValue())
                        {
                            foreach (var meal in Model.Meals)
                            {
                                <li class="portion__price" data-company-meal="@meal.Name" data-company-meal-id="@meal.Id">
                                    <input name="@($"{nameof(Model.SelectedMeals)}[]")" type="hidden" value="@meal.Id" />
                                    <span>@meal.Name</span>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
            <div class="col-4">
                <div class="field">
                    @Html.LabelFor(m => m.Email)
                    <div class="validation__wrapper">
                        @Html.TextBoxFor(m => m.Email, new { placeholder = Model.DisplayName(m => m.Email), type = "email" })
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                </div>
                <div class="accordion__buttons">
                    <button type="submit" class="delete font-ico-delete" formmethod="POST" formaction="@Url.Action("Delete", "Company")"></button>
                    <button type="submit" class="save font-ico-save"></button>
                </div>
            </div>
        }
    </div>
}